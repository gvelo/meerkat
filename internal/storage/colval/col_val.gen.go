// Generated by tmpl
// https://github.com/benbjohnson/tmpl
//
// DO NOT EDIT!
// Source: col_val.gen.go.tmpl

// Copyright 2020 The Meerkat Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package colval

type Int64ColValues struct {
	values []int64
	rid    []uint32
}

func (v *Int64ColValues) Len() int {
	return len(v.values)
}

func (v *Int64ColValues) Rid() []uint32 {
	return v.rid
}

func (v *Int64ColValues) Values() []int64 {
	return v.values
}

func NewInt64ColValues(values []int64, rid []uint32) Int64ColValues {
	return Int64ColValues{
		values: values,
		rid:    rid,
	}
}

type Int32ColValues struct {
	values []int32
	rid    []uint32
}

func (v *Int32ColValues) Len() int {
	return len(v.values)
}

func (v *Int32ColValues) Rid() []uint32 {
	return v.rid
}

func (v *Int32ColValues) Values() []int32 {
	return v.values
}

func NewInt32ColValues(values []int32, rid []uint32) Int32ColValues {
	return Int32ColValues{
		values: values,
		rid:    rid,
	}
}

type Float64ColValues struct {
	values []float64
	rid    []uint32
}

func (v *Float64ColValues) Len() int {
	return len(v.values)
}

func (v *Float64ColValues) Rid() []uint32 {
	return v.rid
}

func (v *Float64ColValues) Values() []float64 {
	return v.values
}

func NewFloat64ColValues(values []float64, rid []uint32) Float64ColValues {
	return Float64ColValues{
		values: values,
		rid:    rid,
	}
}

type BoolColValues struct {
	values []bool
	rid    []uint32
}

func (v *BoolColValues) Len() int {
	return len(v.values)
}

func (v *BoolColValues) Rid() []uint32 {
	return v.rid
}

func (v *BoolColValues) Values() []bool {
	return v.values
}

func NewBoolColValues(values []bool, rid []uint32) BoolColValues {
	return BoolColValues{
		values: values,
		rid:    rid,
	}
}
