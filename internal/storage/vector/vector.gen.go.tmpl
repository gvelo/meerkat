// Copyright 2020 The Meerkat Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package vector


{{range .}}


type {{.Name}}Vector struct {
	nulls []uint64
	data  []{{.Type}}
	l     int
}

func (v *{{.Name}}Vector) Len() int {
	return v.l
}

func (v *{{.Name}}Vector) SetLen(l int) {
	v.l = l
}

func (v *{{.Name}}Vector) Values() []{{.Type}} {
	return v.data[:v.l]
}

func (v *{{.Name}}Vector) IsNull(i int) bool {
	return v.nulls[uint(i)>>log2WordSize]&(1<<(uint(i)&(wordSize-1))) != 0
}

func (v *{{.Name}}Vector) SetNull(i int) {
	v.nulls[uint(i)>>log2WordSize] |= 1 << (uint(i) & (wordSize - 1))
}

func New{{.Name}}Vector(data []{{.Type}}, nulls []uint64) {{.Name}}Vector {
	return {{.Name}}Vector{
		data:  data,
		nulls: nulls,
	}
}


{{ end }}